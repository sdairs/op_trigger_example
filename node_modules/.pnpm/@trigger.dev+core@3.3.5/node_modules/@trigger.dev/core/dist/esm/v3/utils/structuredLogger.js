export var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["log"] = 0] = "log";
    LogLevel[LogLevel["error"] = 1] = "error";
    LogLevel[LogLevel["warn"] = 2] = "warn";
    LogLevel[LogLevel["info"] = 3] = "info";
    LogLevel[LogLevel["debug"] = 4] = "debug";
})(LogLevel || (LogLevel = {}));
export class SimpleStructuredLogger {
    name;
    level;
    fields;
    constructor(name, level = ["1", "true"].includes(process.env.DEBUG ?? "")
        ? LogLevel.debug
        : LogLevel.info, fields) {
        this.name = name;
        this.level = level;
        this.fields = fields;
    }
    child(fields, level) {
        return new SimpleStructuredLogger(this.name, level, { ...this.fields, ...fields });
    }
    log(message, ...args) {
        if (this.level < LogLevel.log)
            return;
        this.#structuredLog(console.log, message, "log", ...args);
    }
    error(message, ...args) {
        if (this.level < LogLevel.error)
            return;
        this.#structuredLog(console.error, message, "error", ...args);
    }
    warn(message, ...args) {
        if (this.level < LogLevel.warn)
            return;
        this.#structuredLog(console.warn, message, "warn", ...args);
    }
    info(message, ...args) {
        if (this.level < LogLevel.info)
            return;
        this.#structuredLog(console.info, message, "info", ...args);
    }
    debug(message, ...args) {
        if (this.level < LogLevel.debug)
            return;
        this.#structuredLog(console.debug, message, "debug", ...args);
    }
    addFields(fields) {
        this.fields = {
            ...this.fields,
            ...fields,
        };
    }
    #structuredLog(loggerFunction, message, level, ...args) {
        const structuredLog = {
            timestamp: new Date(),
            message,
            $name: this.name,
            $level: level,
            ...this.fields,
            ...(args.length === 1 ? args[0] : args),
        };
        loggerFunction(JSON.stringify(structuredLog));
    }
}
//# sourceMappingURL=structuredLogger.js.map