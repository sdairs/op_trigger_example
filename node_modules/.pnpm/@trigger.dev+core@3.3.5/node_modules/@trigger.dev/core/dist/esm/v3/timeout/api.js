import { getGlobal, registerGlobal, unregisterGlobal } from "../utils/globals.js";
const API_NAME = "timeout";
class NoopTimeoutManager {
    abortAfterTimeout(timeoutInSeconds) {
        return new AbortController().signal;
    }
}
const NOOP_TIMEOUT_MANAGER = new NoopTimeoutManager();
export class TimeoutAPI {
    static _instance;
    constructor() { }
    static getInstance() {
        if (!this._instance) {
            this._instance = new TimeoutAPI();
        }
        return this._instance;
    }
    get signal() {
        return this.#getManagerManager().signal;
    }
    abortAfterTimeout(timeoutInSeconds) {
        return this.#getManagerManager().abortAfterTimeout(timeoutInSeconds);
    }
    setGlobalManager(manager) {
        return registerGlobal(API_NAME, manager);
    }
    disable() {
        unregisterGlobal(API_NAME);
    }
    #getManagerManager() {
        return getGlobal(API_NAME) ?? NOOP_TIMEOUT_MANAGER;
    }
}
//# sourceMappingURL=api.js.map